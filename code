#include <SFML/Graphics.hpp>
#include <cmath>
#include <iostream>
#include <iostream>
#include <sstream>

using namespace sf;

class Planet
{
public:
	Texture texture;
	Sprite sprite;
	double x = 0;
	double y = 0;
	double a = 0.001;
	double dx = 0;
	Planet(Image& image, double radius, double orbit, double centerx, double centery)
	{
		if (orbit == 0)
		{
			sprite.setOrigin(sf::Vector2f(2350 , 2350));
		}
		this->centerx = centerx;
		this->centery = centery;
		this->radius = radius;
		this->orbit = orbit;
		texture.loadFromImage(image);
		sprite.setTexture(texture);
		sprite.setScale(radius,radius);
	}
	void update()
	{
		x = orbit * cos(dx) + centerx;
		y = orbit * sin(dx) + centery;
		sprite.setPosition(x, y);
		dx += a;
	}
protected:
	double radius;
	double orbit;
	double centerx;
	double centery;
};

int main()
{
	RenderWindow window(VideoMode(1920, 1200), "Solar System");
	//RenderWindow window(sf::VideoMode(), "app.exe", sf::Style::Fullscreen);
	sf::View view = window.getDefaultView();
	sf::Vector2f center = view.getCenter();
	
	Image eImage;
	Image vImage;
	Image sImage;
	eImage.loadFromFile("earth_PNG17.png");
	vImage.loadFromFile("venus.png");
	sImage.loadFromFile("sun.png");
	Planet earth(eImage, 0.1, 225, center.x,center.y);
	Planet sun(sImage, 0.08, 0,center.x,center.y);
	Planet venus(vImage, 0.02, 175, center.x, center.y);

	while (window.isOpen())
	{
		Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}
		earth.update();
		sun.update();
		venus.update();
		window.clear();
		window.draw(earth.sprite);
		window.draw(sun.sprite);
		window.draw(venus.sprite);
		window.display();
	}

	return 0;
}
